习题3.7 编写一个程序读入两个string对象，测试他们是否相等。如若不相等，则指出两个中哪个较大。
		接着，改写程序测试他们长度是否相等，若不相等指出哪个较长。


#include <string>
#include <iostream>

using namespace std;

int compare_string(const string& s1, const string& s2)
{
	if (s1.empty())
	{
		cout << "s1 is empty" << endl;
		return -2;
	}
	else if (s2.empty())
	{
		cout << "s2 is empty" << endl;
		return -2;
	}

	//s1的长度
	int len1 = s1.length();
	//s2的长度
	int len2 = s2.length();
	if (len1 > len2)
	{
		return 1;
	}
	else if (len1 < len2)
	{
		return -1;
	}
	//长度相等的情况下
	else
	{
		for (int index = 0; index < len1; index++)
		{
			if (s1[index] > s2[index])
			{
				return 1;
			}
			else if (s1[index] < s2[index])
			{
				return -1;
			}
			else
			{
				if( index == len1-1)
					return 0;
			}

		}
	


	}


}

int main()
{
	
	cout << compare_string("123","123") << endl;
	cout << compare_string("123", "121") << endl;
	cout << compare_string("123", "124") << endl;
	return 0;
}


习题3.8  编一个程序，从标准输入读取多个string对象，把他们连接起来放到一个更大的string对象中。
		并输出连接后的string对象。接着，改写程序，将连接后相邻stirng对象以空格隔开。
	
#include <string>
#include <iostream>

using namespace std;



void string_append(string& s, const string& s1, const string& s2)
{
	for (string::size_type index = 0; index < s1.size(); index++)
	{
		s.push_back(s1[index]);

	}

	for (string::size_type index = 0; index < s2.size(); index++)
	{
		s.push_back(s2[index]);

	}


}

void string_append_p(string& s, const string& s1, const string& s2)
{
	for (string::size_type index = 0; index < s1.size(); index++)
	{
		s.push_back(s1[index]);

	}
	s.push_back(' ');

	for (string::size_type index = 0; index < s2.size(); index++)
	{
		s.push_back(s2[index]);

	}

}

int main()
{
	string s;
	//string_append(s,"123","456");
	//cout << s << endl;
	string_append_p(s, "123", "456");
	cout << s << endl;
	return 0;
}
	
		
		
		
习题3.9 下列程序实现什么功能？实现合法吗？如果不合法，说明理由。
	string s;
	cout << s[0] << endl;
解： 合法，输出为空而已。

习题3.10 编写一个程序，从string对象中去掉标点符号。要求输入到程序的字符串必须含有标点符号，
		输出结果则是去掉标点符号后的string对象。
		
		
		

